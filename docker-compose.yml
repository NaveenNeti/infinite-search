version: '3.8'

services:
  postgres:
    image: postgres:14
    container_name: db
    environment:
      POSTGRES_USER: deno_user
      POSTGRES_PASSWORD: deno_pass
      POSTGRES_DB: deno_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U deno_user -d deno_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.9
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep -q '\"status\":\"green\"'"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network


  deno:
    build:
      context: ./deno
      dockerfile: Dockerfile
    container_name: deno_api
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    networks:
      - app-network

volumes:
  postgres_data:
  elasticsearch_data:

networks:
  app-network:
    driver: bridge
